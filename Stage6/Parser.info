-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser.y
-----------------------------------------------------------------------------


rule 33 is unused
rule 34 is unused
rule 35 is unused
rule 36 is unused
rule 37 is unused
rule 38 is unused
rule 39 is unused

terminal NULL is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Program                            (0)
	Program -> TypeDefBlock GDeclBlock MainBlock       (1)
	TypeDefBlock -> TYPE TypeDefList ENDTYPE           (2)
	TypeDefBlock -> TYPE ENDTYPE                       (3)
	TypeDefBlock ->                                    (4)
	TypeDefList -> TypeDefList TypeDef                 (5)
	TypeDefList -> TypeDef                             (6)
	TypeDef -> id '{' FieldDeclList '}'                (7)
	FieldDeclList -> FieldDeclList FieldDecl           (8)
	FieldDeclList -> FieldDecl                         (9)
	FieldDecl -> Type BaseVar ';'                      (10)
	Type -> INT                                        (11)
	Type -> STR                                        (12)
	Type -> id                                         (13)
	GDeclBlock -> DECL GDeclList ENDDECL               (14)
	GDeclBlock -> DECL ENDDECL                         (15)
	GDeclBlock ->                                      (16)
	GDeclList -> GDeclList GDecl                       (17)
	GDeclList -> GDecl                                 (18)
	GDecl -> Type GVarList ';'                         (19)
	GVarList -> GVarList ',' GDec                      (20)
	GVarList -> GDec                                   (21)
	GDec -> BaseVar                                    (22)
	GDec -> id '(' ParamList ')'                       (23)
	GDec -> '*' id '(' ParamList ')'                   (24)
	GDec -> id '[' int ']'                             (25)
	GDec -> id '[' int ']' '[' int ']'                 (26)
	BaseVar -> id                                      (27)
	BaseVar -> '*' id                                  (28)
	ParamList -> ParamList ',' Param                   (29)
	ParamList -> Param                                 (30)
	ParamList ->                                       (31)
	Param -> Type BaseVar                              (32)
	FDefBlock -> FDefBlock FDef                        (33)
	FDefBlock -> FDef                                  (34)
	FDefBlock ->                                       (35)
	FDef -> FType FName '(' ParamList ')' '{' LDeclBlock Routine '}'   (36)
	FType -> Type                                      (37)
	FType -> Type '*'                                  (38)
	FName -> id                                        (39)
	LDeclBlock -> DECL LDeclList ENDDECL               (40)
	LDeclBlock -> DECL ENDDECL                         (41)
	LDeclBlock ->                                      (42)
	LDeclList -> LDeclList LDecl                       (43)
	LDeclList -> LDecl                                 (44)
	LDecl -> Type LVarList ';'                         (45)
	LVarList -> LVarList ',' BaseVar                   (46)
	LVarList -> BaseVar                                (47)
	Routine -> BEGIN Slist Retstmt END                 (48)
	Routine -> BEGIN Retstmt END                       (49)
	Retstmt -> RETURN RVal ';'                         (50)
	RVal -> Variable                                   (51)
	RVal -> FnCall                                     (52)
	RVal -> String                                     (53)
	RVal -> E2                                         (54)
	RVal -> '&' Variable                               (55)
	Slist -> Slist Stmt                                (56)
	Slist -> Stmt                                      (57)
	Stmt -> READ '(' Variable ')' ';'                  (58)
	Stmt -> Variable '=' RVal ';'                      (59)
	Stmt -> WRITE '(' RVal ')' ';'                     (60)
	Stmt -> IF '(' B ')' THEN Slist ENDIF ';'          (61)
	Stmt -> IF '(' B ')' THEN Slist ELSE Slist ENDIF ';'   (62)
	Stmt -> WHILE '(' B ')' DO Slist ENDWHILE ';'      (63)
	Stmt -> BREAK ';'                                  (64)
	Stmt -> CONTINUE ';'                               (65)
	Stmt -> FnCall ';'                                 (66)
	E2 -> E '+' E                                      (67)
	E2 -> E '-' E                                      (68)
	E2 -> E '*' E                                      (69)
	E2 -> E '/' E                                      (70)
	E2 -> E '%' E                                      (71)
	E2 -> '(' E2 ')'                                   (72)
	E2 -> int                                          (73)
	E -> E2                                            (74)
	E -> FnCall                                        (75)
	E -> Variable                                      (76)
	FnCall -> id '(' ArgList ')'                       (77)
	ArgList -> ArgList ',' RVal                        (78)
	ArgList -> RVal                                    (79)
	ArgList ->                                         (80)
	B -> E '<' E                                       (81)
	B -> E '>' E                                       (82)
	B -> E '<=' E                                      (83)
	B -> E '>=' E                                      (84)
	B -> E '!=' E                                      (85)
	B -> E '==' E                                      (86)
	Variable -> id                                     (87)
	Variable -> id '[' E ']'                           (88)
	Variable -> id '[' E ']' '[' E ']'                 (89)
	Variable -> '*' id                                 (90)
	Variable -> DotField                               (91)
	DotField -> DotField '.' id                        (92)
	DotField -> id '.' id                              (93)
	String -> str                                      (94)
	MainBlock -> INT Main '(' ')' '{' LDeclBlock Routine '}'   (95)
	Main -> MAIN                                       (96)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TokenIntVal $$ }
	str            { TokenStrVal $$ }
	id             { TokenVar $$ }
	'+'            { TokenPlus }
	'-'            { TokenMinus }
	'*'            { TokenTimes }
	'/'            { TokenDiv }
	'%'            { TokenMod }
	'('            { TokenLParen }
	')'            { TokenRParen }
	'['            { TokenLBox }
	']'            { TokenRBox }
	'{'            { TokenLCurly }
	'}'            { TokenRCurly }
	'&'            { TokenAddr }
	'='            { TokenAssign }
	'<'            { TokenLt }
	'>'            { TokenGt }
	'<='           { TokenLtE }
	'>='           { TokenGtE }
	'!='           { TokenNE }
	'=='           { TokenEq }
	'.'            { TokenDot }
	BEGIN          { TokenBegin }
	END            { TokenEnd }
	READ           { TokenRead }
	WRITE          { TokenWrite }
	IF             { TokenIf }
	THEN           { TokenThen }
	ELSE           { TokenElse }
	ENDIF          { TokenEndif }
	WHILE          { TokenWhile }
	DO             { TokenDo }
	ENDWHILE       { TokenEndwhile }
	BREAK          { TokenBreak }
	CONTINUE       { TokenCont }
	INT            { TokenInt }
	STR            { TokenStr }
	DECL           { TokenDecl }
	ENDDECL        { TokenEndDecl }
	TYPE           { TokenType }
	ENDTYPE        { TokenEndType }
	MAIN           { TokenMain }
	RETURN         { TokenReturn }
	NULL           { TokenNull }
	','            { TokenComma }
	';'            { TokenStmtEnd }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Program         rule  1
	TypeDefBlock    rules 2, 3, 4
	TypeDefList     rules 5, 6
	TypeDef         rule  7
	FieldDeclList   rules 8, 9
	FieldDecl       rule  10
	Type            rules 11, 12, 13
	GDeclBlock      rules 14, 15, 16
	GDeclList       rules 17, 18
	GDecl           rule  19
	GVarList        rules 20, 21
	GDec            rules 22, 23, 24, 25, 26
	BaseVar         rules 27, 28
	ParamList       rules 29, 30, 31
	Param           rule  32
	FDefBlock       rules 33, 34, 35
	FDef            rule  36
	FType           rules 37, 38
	FName           rule  39
	LDeclBlock      rules 40, 41, 42
	LDeclList       rules 43, 44
	LDecl           rule  45
	LVarList        rules 46, 47
	Routine         rules 48, 49
	Retstmt         rule  50
	RVal            rules 51, 52, 53, 54, 55
	Slist           rules 56, 57
	Stmt            rules 58, 59, 60, 61, 62, 63, 64, 65, 66
	E2              rules 67, 68, 69, 70, 71, 72, 73
	E               rules 74, 75, 76
	FnCall          rule  77
	ArgList         rules 78, 79, 80
	B               rules 81, 82, 83, 84, 85, 86
	Variable        rules 87, 88, 89, 90, 91
	DotField        rules 92, 93
	String          rule  94
	MainBlock       rule  95
	Main            rule  96

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . Program                           (rule 0)

	INT            reduce using rule 4
	DECL           reduce using rule 4
	TYPE           shift, and enter state 3

	Program        goto state 4
	TypeDefBlock   goto state 2

State 1

	Program -> . TypeDefBlock GDeclBlock MainBlock      (rule 1)

	TYPE           shift, and enter state 3

	TypeDefBlock   goto state 2

State 2

	Program -> TypeDefBlock . GDeclBlock MainBlock      (rule 1)

	INT            reduce using rule 16
	DECL           shift, and enter state 10

	GDeclBlock     goto state 9

State 3

	TypeDefBlock -> TYPE . TypeDefList ENDTYPE          (rule 2)
	TypeDefBlock -> TYPE . ENDTYPE                      (rule 3)

	id             shift, and enter state 7
	ENDTYPE        shift, and enter state 8

	TypeDefList    goto state 5
	TypeDef        goto state 6

State 4

	%start_parse -> Program .                           (rule 0)

	%eof           accept


State 5

	TypeDefBlock -> TYPE TypeDefList . ENDTYPE          (rule 2)
	TypeDefList -> TypeDefList . TypeDef                (rule 5)

	id             shift, and enter state 7
	ENDTYPE        shift, and enter state 22

	TypeDef        goto state 21

State 6

	TypeDefList -> TypeDef .                            (rule 6)

	id             reduce using rule 6
	ENDTYPE        reduce using rule 6


State 7

	TypeDef -> id . '{' FieldDeclList '}'               (rule 7)

	'{'            shift, and enter state 20


State 8

	TypeDefBlock -> TYPE ENDTYPE .                      (rule 3)

	INT            reduce using rule 3
	DECL           reduce using rule 3


State 9

	Program -> TypeDefBlock GDeclBlock . MainBlock      (rule 1)

	INT            shift, and enter state 19

	MainBlock      goto state 18

State 10

	GDeclBlock -> DECL . GDeclList ENDDECL              (rule 14)
	GDeclBlock -> DECL . ENDDECL                        (rule 15)

	id             shift, and enter state 14
	INT            shift, and enter state 15
	STR            shift, and enter state 16
	ENDDECL        shift, and enter state 17

	Type           goto state 11
	GDeclList      goto state 12
	GDecl          goto state 13

State 11

	GDecl -> Type . GVarList ';'                        (rule 19)

	id             shift, and enter state 33
	'*'            shift, and enter state 34

	GVarList       goto state 30
	GDec           goto state 31
	BaseVar        goto state 32

State 12

	GDeclBlock -> DECL GDeclList . ENDDECL              (rule 14)
	GDeclList -> GDeclList . GDecl                      (rule 17)

	id             shift, and enter state 14
	INT            shift, and enter state 15
	STR            shift, and enter state 16
	ENDDECL        shift, and enter state 29

	Type           goto state 11
	GDecl          goto state 28

State 13

	GDeclList -> GDecl .                                (rule 18)

	id             reduce using rule 18
	INT            reduce using rule 18
	STR            reduce using rule 18
	ENDDECL        reduce using rule 18


State 14

	Type -> id .                                        (rule 13)

	id             reduce using rule 13
	'*'            reduce using rule 13


State 15

	Type -> INT .                                       (rule 11)

	id             reduce using rule 11
	'*'            reduce using rule 11


State 16

	Type -> STR .                                       (rule 12)

	id             reduce using rule 12
	'*'            reduce using rule 12


State 17

	GDeclBlock -> DECL ENDDECL .                        (rule 15)

	INT            reduce using rule 15


State 18

	Program -> TypeDefBlock GDeclBlock MainBlock .      (rule 1)

	%eof           reduce using rule 1


State 19

	MainBlock -> INT . Main '(' ')' '{' LDeclBlock Routine '}'    (rule 95)

	MAIN           shift, and enter state 27

	Main           goto state 26

State 20

	TypeDef -> id '{' . FieldDeclList '}'               (rule 7)

	id             shift, and enter state 14
	INT            shift, and enter state 15
	STR            shift, and enter state 16

	FieldDeclList  goto state 23
	FieldDecl      goto state 24
	Type           goto state 25

State 21

	TypeDefList -> TypeDefList TypeDef .                (rule 5)

	id             reduce using rule 5
	ENDTYPE        reduce using rule 5


State 22

	TypeDefBlock -> TYPE TypeDefList ENDTYPE .          (rule 2)

	INT            reduce using rule 2
	DECL           reduce using rule 2


State 23

	TypeDef -> id '{' FieldDeclList . '}'               (rule 7)
	FieldDeclList -> FieldDeclList . FieldDecl          (rule 8)

	id             shift, and enter state 14
	'}'            shift, and enter state 45
	INT            shift, and enter state 15
	STR            shift, and enter state 16

	FieldDecl      goto state 44
	Type           goto state 25

State 24

	FieldDeclList -> FieldDecl .                        (rule 9)

	id             reduce using rule 9
	'}'            reduce using rule 9
	INT            reduce using rule 9
	STR            reduce using rule 9


State 25

	FieldDecl -> Type . BaseVar ';'                     (rule 10)

	id             shift, and enter state 42
	'*'            shift, and enter state 43

	BaseVar        goto state 41

State 26

	MainBlock -> INT Main . '(' ')' '{' LDeclBlock Routine '}'    (rule 95)

	'('            shift, and enter state 40


State 27

	Main -> MAIN .                                      (rule 96)

	'('            reduce using rule 96


State 28

	GDeclList -> GDeclList GDecl .                      (rule 17)

	id             reduce using rule 17
	INT            reduce using rule 17
	STR            reduce using rule 17
	ENDDECL        reduce using rule 17


State 29

	GDeclBlock -> DECL GDeclList ENDDECL .              (rule 14)

	INT            reduce using rule 14


State 30

	GDecl -> Type GVarList . ';'                        (rule 19)
	GVarList -> GVarList . ',' GDec                     (rule 20)

	','            shift, and enter state 38
	';'            shift, and enter state 39


State 31

	GVarList -> GDec .                                  (rule 21)

	','            reduce using rule 21
	';'            reduce using rule 21


State 32

	GDec -> BaseVar .                                   (rule 22)

	','            reduce using rule 22
	';'            reduce using rule 22


State 33

	GDec -> id . '(' ParamList ')'                      (rule 23)
	GDec -> id . '[' int ']'                            (rule 25)
	GDec -> id . '[' int ']' '[' int ']'                (rule 26)
	BaseVar -> id .                                     (rule 27)

	'('            shift, and enter state 36
	'['            shift, and enter state 37
	','            reduce using rule 27
	';'            reduce using rule 27


State 34

	GDec -> '*' . id '(' ParamList ')'                  (rule 24)
	BaseVar -> '*' . id                                 (rule 28)

	id             shift, and enter state 35


State 35

	GDec -> '*' id . '(' ParamList ')'                  (rule 24)
	BaseVar -> '*' id .                                 (rule 28)

	'('            shift, and enter state 54
	','            reduce using rule 28
	';'            reduce using rule 28


State 36

	GDec -> id '(' . ParamList ')'                      (rule 23)

	id             shift, and enter state 14
	')'            reduce using rule 31
	INT            shift, and enter state 15
	STR            shift, and enter state 16
	','            reduce using rule 31

	Type           goto state 51
	ParamList      goto state 52
	Param          goto state 53

State 37

	GDec -> id '[' . int ']'                            (rule 25)
	GDec -> id '[' . int ']' '[' int ']'                (rule 26)

	int            shift, and enter state 50


State 38

	GVarList -> GVarList ',' . GDec                     (rule 20)

	id             shift, and enter state 33
	'*'            shift, and enter state 34

	GDec           goto state 49
	BaseVar        goto state 32

State 39

	GDecl -> Type GVarList ';' .                        (rule 19)

	id             reduce using rule 19
	INT            reduce using rule 19
	STR            reduce using rule 19
	ENDDECL        reduce using rule 19


State 40

	MainBlock -> INT Main '(' . ')' '{' LDeclBlock Routine '}'    (rule 95)

	')'            shift, and enter state 48


State 41

	FieldDecl -> Type BaseVar . ';'                     (rule 10)

	';'            shift, and enter state 47


State 42

	BaseVar -> id .                                     (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27


State 43

	BaseVar -> '*' . id                                 (rule 28)

	id             shift, and enter state 46


State 44

	FieldDeclList -> FieldDeclList FieldDecl .          (rule 8)

	id             reduce using rule 8
	'}'            reduce using rule 8
	INT            reduce using rule 8
	STR            reduce using rule 8


State 45

	TypeDef -> id '{' FieldDeclList '}' .               (rule 7)

	id             reduce using rule 7
	ENDTYPE        reduce using rule 7


State 46

	BaseVar -> '*' id .                                 (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	';'            reduce using rule 28


State 47

	FieldDecl -> Type BaseVar ';' .                     (rule 10)

	id             reduce using rule 10
	'}'            reduce using rule 10
	INT            reduce using rule 10
	STR            reduce using rule 10


State 48

	MainBlock -> INT Main '(' ')' . '{' LDeclBlock Routine '}'    (rule 95)

	'{'            shift, and enter state 60


State 49

	GVarList -> GVarList ',' GDec .                     (rule 20)

	','            reduce using rule 20
	';'            reduce using rule 20


State 50

	GDec -> id '[' int . ']'                            (rule 25)
	GDec -> id '[' int . ']' '[' int ']'                (rule 26)

	']'            shift, and enter state 59


State 51

	Param -> Type . BaseVar                             (rule 32)

	id             shift, and enter state 42
	'*'            shift, and enter state 43

	BaseVar        goto state 58

State 52

	GDec -> id '(' ParamList . ')'                      (rule 23)
	ParamList -> ParamList . ',' Param                  (rule 29)

	')'            shift, and enter state 56
	','            shift, and enter state 57


State 53

	ParamList -> Param .                                (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30


State 54

	GDec -> '*' id '(' . ParamList ')'                  (rule 24)

	id             shift, and enter state 14
	')'            reduce using rule 31
	INT            shift, and enter state 15
	STR            shift, and enter state 16
	','            reduce using rule 31

	Type           goto state 51
	ParamList      goto state 55
	Param          goto state 53

State 55

	GDec -> '*' id '(' ParamList . ')'                  (rule 24)
	ParamList -> ParamList . ',' Param                  (rule 29)

	')'            shift, and enter state 65
	','            shift, and enter state 57


State 56

	GDec -> id '(' ParamList ')' .                      (rule 23)

	','            reduce using rule 23
	';'            reduce using rule 23


State 57

	ParamList -> ParamList ',' . Param                  (rule 29)

	id             shift, and enter state 14
	INT            shift, and enter state 15
	STR            shift, and enter state 16

	Type           goto state 51
	Param          goto state 64

State 58

	Param -> Type BaseVar .                             (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32


State 59

	GDec -> id '[' int ']' .                            (rule 25)
	GDec -> id '[' int ']' . '[' int ']'                (rule 26)

	'['            shift, and enter state 63
	','            reduce using rule 25
	';'            reduce using rule 25


State 60

	MainBlock -> INT Main '(' ')' '{' . LDeclBlock Routine '}'    (rule 95)

	BEGIN          reduce using rule 42
	DECL           shift, and enter state 62

	LDeclBlock     goto state 61

State 61

	MainBlock -> INT Main '(' ')' '{' LDeclBlock . Routine '}'    (rule 95)

	BEGIN          shift, and enter state 72

	Routine        goto state 71

State 62

	LDeclBlock -> DECL . LDeclList ENDDECL              (rule 40)
	LDeclBlock -> DECL . ENDDECL                        (rule 41)

	id             shift, and enter state 14
	INT            shift, and enter state 15
	STR            shift, and enter state 16
	ENDDECL        shift, and enter state 70

	Type           goto state 67
	LDeclList      goto state 68
	LDecl          goto state 69

State 63

	GDec -> id '[' int ']' '[' . int ']'                (rule 26)

	int            shift, and enter state 66


State 64

	ParamList -> ParamList ',' Param .                  (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29


State 65

	GDec -> '*' id '(' ParamList ')' .                  (rule 24)

	','            reduce using rule 24
	';'            reduce using rule 24


State 66

	GDec -> id '[' int ']' '[' int . ']'                (rule 26)

	']'            shift, and enter state 93


State 67

	LDecl -> Type . LVarList ';'                        (rule 45)

	id             shift, and enter state 42
	'*'            shift, and enter state 43

	BaseVar        goto state 91
	LVarList       goto state 92

State 68

	LDeclBlock -> DECL LDeclList . ENDDECL              (rule 40)
	LDeclList -> LDeclList . LDecl                      (rule 43)

	id             shift, and enter state 14
	INT            shift, and enter state 15
	STR            shift, and enter state 16
	ENDDECL        shift, and enter state 90

	Type           goto state 67
	LDecl          goto state 89

State 69

	LDeclList -> LDecl .                                (rule 44)

	id             reduce using rule 44
	INT            reduce using rule 44
	STR            reduce using rule 44
	ENDDECL        reduce using rule 44


State 70

	LDeclBlock -> DECL ENDDECL .                        (rule 41)

	BEGIN          reduce using rule 41


State 71

	MainBlock -> INT Main '(' ')' '{' LDeclBlock Routine . '}'    (rule 95)

	'}'            shift, and enter state 88


State 72

	Routine -> BEGIN . Slist Retstmt END                (rule 48)
	Routine -> BEGIN . Retstmt END                      (rule 49)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86
	RETURN         shift, and enter state 87

	Retstmt        goto state 73
	Slist          goto state 74
	Stmt           goto state 75
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 73

	Routine -> BEGIN Retstmt . END                      (rule 49)

	END            shift, and enter state 121


State 74

	Routine -> BEGIN Slist . Retstmt END                (rule 48)
	Slist -> Slist . Stmt                               (rule 56)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86
	RETURN         shift, and enter state 87

	Retstmt        goto state 119
	Stmt           goto state 120
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 75

	Slist -> Stmt .                                     (rule 57)

	id             reduce using rule 57
	'*'            reduce using rule 57
	READ           reduce using rule 57
	WRITE          reduce using rule 57
	IF             reduce using rule 57
	ELSE           reduce using rule 57
	ENDIF          reduce using rule 57
	WHILE          reduce using rule 57
	ENDWHILE       reduce using rule 57
	BREAK          reduce using rule 57
	CONTINUE       reduce using rule 57
	RETURN         reduce using rule 57


State 76

	Stmt -> FnCall . ';'                                (rule 66)

	';'            shift, and enter state 118


State 77

	Stmt -> Variable . '=' RVal ';'                     (rule 59)

	'='            shift, and enter state 117


State 78

	Variable -> DotField .                              (rule 91)
	DotField -> DotField . '.' id                       (rule 92)

	'+'            reduce using rule 91
	'-'            reduce using rule 91
	'*'            reduce using rule 91
	'/'            reduce using rule 91
	'%'            reduce using rule 91
	')'            reduce using rule 91
	']'            reduce using rule 91
	'='            reduce using rule 91
	'<'            reduce using rule 91
	'>'            reduce using rule 91
	'<='           reduce using rule 91
	'>='           reduce using rule 91
	'!='           reduce using rule 91
	'=='           reduce using rule 91
	'.'            shift, and enter state 116
	','            reduce using rule 91
	';'            reduce using rule 91


State 79

	FnCall -> id . '(' ArgList ')'                      (rule 77)
	Variable -> id .                                    (rule 87)
	Variable -> id . '[' E ']'                          (rule 88)
	Variable -> id . '[' E ']' '[' E ']'                (rule 89)
	DotField -> id . '.' id                             (rule 93)

	'+'            reduce using rule 87
	'-'            reduce using rule 87
	'*'            reduce using rule 87
	'/'            reduce using rule 87
	'%'            reduce using rule 87
	'('            shift, and enter state 113
	')'            reduce using rule 87
	'['            shift, and enter state 114
	']'            reduce using rule 87
	'='            reduce using rule 87
	'<'            reduce using rule 87
	'>'            reduce using rule 87
	'<='           reduce using rule 87
	'>='           reduce using rule 87
	'!='           reduce using rule 87
	'=='           reduce using rule 87
	'.'            shift, and enter state 115
	','            reduce using rule 87
	';'            reduce using rule 87


State 80

	Variable -> '*' . id                                (rule 90)

	id             shift, and enter state 112


State 81

	Stmt -> READ . '(' Variable ')' ';'                 (rule 58)

	'('            shift, and enter state 111


State 82

	Stmt -> WRITE . '(' RVal ')' ';'                    (rule 60)

	'('            shift, and enter state 110


State 83

	Stmt -> IF . '(' B ')' THEN Slist ENDIF ';'         (rule 61)
	Stmt -> IF . '(' B ')' THEN Slist ELSE Slist ENDIF ';'    (rule 62)

	'('            shift, and enter state 109


State 84

	Stmt -> WHILE . '(' B ')' DO Slist ENDWHILE ';'     (rule 63)

	'('            shift, and enter state 108


State 85

	Stmt -> BREAK . ';'                                 (rule 64)

	';'            shift, and enter state 107


State 86

	Stmt -> CONTINUE . ';'                              (rule 65)

	';'            shift, and enter state 106


State 87

	Retstmt -> RETURN . RVal ';'                        (rule 50)

	int            shift, and enter state 102
	str            shift, and enter state 103
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104
	'&'            shift, and enter state 105

	RVal           goto state 96
	E2             goto state 97
	E              goto state 98
	FnCall         goto state 99
	Variable       goto state 100
	DotField       goto state 78
	String         goto state 101

State 88

	MainBlock -> INT Main '(' ')' '{' LDeclBlock Routine '}' .    (rule 95)

	%eof           reduce using rule 95


State 89

	LDeclList -> LDeclList LDecl .                      (rule 43)

	id             reduce using rule 43
	INT            reduce using rule 43
	STR            reduce using rule 43
	ENDDECL        reduce using rule 43


State 90

	LDeclBlock -> DECL LDeclList ENDDECL .              (rule 40)

	BEGIN          reduce using rule 40


State 91

	LVarList -> BaseVar .                               (rule 47)

	','            reduce using rule 47
	';'            reduce using rule 47


State 92

	LDecl -> Type LVarList . ';'                        (rule 45)
	LVarList -> LVarList . ',' BaseVar                  (rule 46)

	','            shift, and enter state 94
	';'            shift, and enter state 95


State 93

	GDec -> id '[' int ']' '[' int ']' .                (rule 26)

	','            reduce using rule 26
	';'            reduce using rule 26


State 94

	LVarList -> LVarList ',' . BaseVar                  (rule 46)

	id             shift, and enter state 42
	'*'            shift, and enter state 43

	BaseVar        goto state 146

State 95

	LDecl -> Type LVarList ';' .                        (rule 45)

	id             reduce using rule 45
	INT            reduce using rule 45
	STR            reduce using rule 45
	ENDDECL        reduce using rule 45


State 96

	Retstmt -> RETURN RVal . ';'                        (rule 50)

	';'            shift, and enter state 145


State 97

	RVal -> E2 .                                        (rule 54)
	E -> E2 .                                           (rule 74)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'%'            reduce using rule 74
	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54


State 98

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144


State 99

	RVal -> FnCall .                                    (rule 52)
	E -> FnCall .                                       (rule 75)

	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	'%'            reduce using rule 75
	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52


State 100

	RVal -> Variable .                                  (rule 51)
	E -> Variable .                                     (rule 76)

	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	'%'            reduce using rule 76
	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51


State 101

	RVal -> String .                                    (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53


State 102

	E2 -> int .                                         (rule 73)

	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	'%'            reduce using rule 73
	')'            reduce using rule 73
	']'            reduce using rule 73
	'<'            reduce using rule 73
	'>'            reduce using rule 73
	'<='           reduce using rule 73
	'>='           reduce using rule 73
	'!='           reduce using rule 73
	'=='           reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73


State 103

	String -> str .                                     (rule 94)

	')'            reduce using rule 94
	','            reduce using rule 94
	';'            reduce using rule 94


State 104

	E2 -> '(' . E2 ')'                                  (rule 72)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 139
	E              goto state 98
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 105

	RVal -> '&' . Variable                              (rule 55)

	id             shift, and enter state 133
	'*'            shift, and enter state 80

	Variable       goto state 138
	DotField       goto state 78

State 106

	Stmt -> CONTINUE ';' .                              (rule 65)

	id             reduce using rule 65
	'*'            reduce using rule 65
	READ           reduce using rule 65
	WRITE          reduce using rule 65
	IF             reduce using rule 65
	ELSE           reduce using rule 65
	ENDIF          reduce using rule 65
	WHILE          reduce using rule 65
	ENDWHILE       reduce using rule 65
	BREAK          reduce using rule 65
	CONTINUE       reduce using rule 65
	RETURN         reduce using rule 65


State 107

	Stmt -> BREAK ';' .                                 (rule 64)

	id             reduce using rule 64
	'*'            reduce using rule 64
	READ           reduce using rule 64
	WRITE          reduce using rule 64
	IF             reduce using rule 64
	ELSE           reduce using rule 64
	ENDIF          reduce using rule 64
	WHILE          reduce using rule 64
	ENDWHILE       reduce using rule 64
	BREAK          reduce using rule 64
	CONTINUE       reduce using rule 64
	RETURN         reduce using rule 64


State 108

	Stmt -> WHILE '(' . B ')' DO Slist ENDWHILE ';'     (rule 63)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 135
	FnCall         goto state 128
	B              goto state 137
	Variable       goto state 129
	DotField       goto state 78

State 109

	Stmt -> IF '(' . B ')' THEN Slist ENDIF ';'         (rule 61)
	Stmt -> IF '(' . B ')' THEN Slist ELSE Slist ENDIF ';'    (rule 62)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 135
	FnCall         goto state 128
	B              goto state 136
	Variable       goto state 129
	DotField       goto state 78

State 110

	Stmt -> WRITE '(' . RVal ')' ';'                    (rule 60)

	int            shift, and enter state 102
	str            shift, and enter state 103
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104
	'&'            shift, and enter state 105

	RVal           goto state 134
	E2             goto state 97
	E              goto state 98
	FnCall         goto state 99
	Variable       goto state 100
	DotField       goto state 78
	String         goto state 101

State 111

	Stmt -> READ '(' . Variable ')' ';'                 (rule 58)

	id             shift, and enter state 133
	'*'            shift, and enter state 80

	Variable       goto state 132
	DotField       goto state 78

State 112

	Variable -> '*' id .                                (rule 90)

	'+'            reduce using rule 90
	'-'            reduce using rule 90
	'*'            reduce using rule 90
	'/'            reduce using rule 90
	'%'            reduce using rule 90
	')'            reduce using rule 90
	']'            reduce using rule 90
	'='            reduce using rule 90
	'<'            reduce using rule 90
	'>'            reduce using rule 90
	'<='           reduce using rule 90
	'>='           reduce using rule 90
	'!='           reduce using rule 90
	'=='           reduce using rule 90
	','            reduce using rule 90
	';'            reduce using rule 90


State 113

	FnCall -> id '(' . ArgList ')'                      (rule 77)

	int            shift, and enter state 102
	str            shift, and enter state 103
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104
	')'            reduce using rule 80
	'&'            shift, and enter state 105
	','            reduce using rule 80

	RVal           goto state 130
	E2             goto state 97
	E              goto state 98
	FnCall         goto state 99
	ArgList        goto state 131
	Variable       goto state 100
	DotField       goto state 78
	String         goto state 101

State 114

	Variable -> id '[' . E ']'                          (rule 88)
	Variable -> id '[' . E ']' '[' E ']'                (rule 89)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 127
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 115

	DotField -> id '.' . id                             (rule 93)

	id             shift, and enter state 125


State 116

	DotField -> DotField '.' . id                       (rule 92)

	id             shift, and enter state 124


State 117

	Stmt -> Variable '=' . RVal ';'                     (rule 59)

	int            shift, and enter state 102
	str            shift, and enter state 103
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104
	'&'            shift, and enter state 105

	RVal           goto state 123
	E2             goto state 97
	E              goto state 98
	FnCall         goto state 99
	Variable       goto state 100
	DotField       goto state 78
	String         goto state 101

State 118

	Stmt -> FnCall ';' .                                (rule 66)

	id             reduce using rule 66
	'*'            reduce using rule 66
	READ           reduce using rule 66
	WRITE          reduce using rule 66
	IF             reduce using rule 66
	ELSE           reduce using rule 66
	ENDIF          reduce using rule 66
	WHILE          reduce using rule 66
	ENDWHILE       reduce using rule 66
	BREAK          reduce using rule 66
	CONTINUE       reduce using rule 66
	RETURN         reduce using rule 66


State 119

	Routine -> BEGIN Slist Retstmt . END                (rule 48)

	END            shift, and enter state 122


State 120

	Slist -> Slist Stmt .                               (rule 56)

	id             reduce using rule 56
	'*'            reduce using rule 56
	READ           reduce using rule 56
	WRITE          reduce using rule 56
	IF             reduce using rule 56
	ELSE           reduce using rule 56
	ENDIF          reduce using rule 56
	WHILE          reduce using rule 56
	ENDWHILE       reduce using rule 56
	BREAK          reduce using rule 56
	CONTINUE       reduce using rule 56
	RETURN         reduce using rule 56


State 121

	Routine -> BEGIN Retstmt END .                      (rule 49)

	'}'            reduce using rule 49


State 122

	Routine -> BEGIN Slist Retstmt END .                (rule 48)

	'}'            reduce using rule 48


State 123

	Stmt -> Variable '=' RVal . ';'                     (rule 59)

	';'            shift, and enter state 166


State 124

	DotField -> DotField '.' id .                       (rule 92)

	'+'            reduce using rule 92
	'-'            reduce using rule 92
	'*'            reduce using rule 92
	'/'            reduce using rule 92
	'%'            reduce using rule 92
	')'            reduce using rule 92
	']'            reduce using rule 92
	'='            reduce using rule 92
	'<'            reduce using rule 92
	'>'            reduce using rule 92
	'<='           reduce using rule 92
	'>='           reduce using rule 92
	'!='           reduce using rule 92
	'=='           reduce using rule 92
	'.'            reduce using rule 92
	','            reduce using rule 92
	';'            reduce using rule 92


State 125

	DotField -> id '.' id .                             (rule 93)

	'+'            reduce using rule 93
	'-'            reduce using rule 93
	'*'            reduce using rule 93
	'/'            reduce using rule 93
	'%'            reduce using rule 93
	')'            reduce using rule 93
	']'            reduce using rule 93
	'='            reduce using rule 93
	'<'            reduce using rule 93
	'>'            reduce using rule 93
	'<='           reduce using rule 93
	'>='           reduce using rule 93
	'!='           reduce using rule 93
	'=='           reduce using rule 93
	'.'            reduce using rule 93
	','            reduce using rule 93
	';'            reduce using rule 93


State 126

	E -> E2 .                                           (rule 74)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'%'            reduce using rule 74
	')'            reduce using rule 74
	']'            reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'<='           reduce using rule 74
	'>='           reduce using rule 74
	'!='           reduce using rule 74
	'=='           reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74


State 127

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	Variable -> id '[' E . ']'                          (rule 88)
	Variable -> id '[' E . ']' '[' E ']'                (rule 89)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	']'            shift, and enter state 165


State 128

	E -> FnCall .                                       (rule 75)

	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	'%'            reduce using rule 75
	')'            reduce using rule 75
	']'            reduce using rule 75
	'<'            reduce using rule 75
	'>'            reduce using rule 75
	'<='           reduce using rule 75
	'>='           reduce using rule 75
	'!='           reduce using rule 75
	'=='           reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75


State 129

	E -> Variable .                                     (rule 76)

	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	'%'            reduce using rule 76
	')'            reduce using rule 76
	']'            reduce using rule 76
	'<'            reduce using rule 76
	'>'            reduce using rule 76
	'<='           reduce using rule 76
	'>='           reduce using rule 76
	'!='           reduce using rule 76
	'=='           reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76


State 130

	ArgList -> RVal .                                   (rule 79)

	')'            reduce using rule 79
	','            reduce using rule 79


State 131

	FnCall -> id '(' ArgList . ')'                      (rule 77)
	ArgList -> ArgList . ',' RVal                       (rule 78)

	')'            shift, and enter state 163
	','            shift, and enter state 164


State 132

	Stmt -> READ '(' Variable . ')' ';'                 (rule 58)

	')'            shift, and enter state 162


State 133

	Variable -> id .                                    (rule 87)
	Variable -> id . '[' E ']'                          (rule 88)
	Variable -> id . '[' E ']' '[' E ']'                (rule 89)
	DotField -> id . '.' id                             (rule 93)

	')'            reduce using rule 87
	'['            shift, and enter state 114
	'.'            shift, and enter state 115
	','            reduce using rule 87
	';'            reduce using rule 87


State 134

	Stmt -> WRITE '(' RVal . ')' ';'                    (rule 60)

	')'            shift, and enter state 161


State 135

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E . '<' E                                      (rule 81)
	B -> E . '>' E                                      (rule 82)
	B -> E . '<=' E                                     (rule 83)
	B -> E . '>=' E                                     (rule 84)
	B -> E . '!=' E                                     (rule 85)
	B -> E . '==' E                                     (rule 86)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	'<'            shift, and enter state 155
	'>'            shift, and enter state 156
	'<='           shift, and enter state 157
	'>='           shift, and enter state 158
	'!='           shift, and enter state 159
	'=='           shift, and enter state 160


State 136

	Stmt -> IF '(' B . ')' THEN Slist ENDIF ';'         (rule 61)
	Stmt -> IF '(' B . ')' THEN Slist ELSE Slist ENDIF ';'    (rule 62)

	')'            shift, and enter state 154


State 137

	Stmt -> WHILE '(' B . ')' DO Slist ENDWHILE ';'     (rule 63)

	')'            shift, and enter state 153


State 138

	RVal -> '&' Variable .                              (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55


State 139

	E2 -> '(' E2 . ')'                                  (rule 72)
	E -> E2 .                                           (rule 74)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'%'            reduce using rule 74
	')'            shift, and enter state 152


State 140

	E2 -> E '+' . E                                     (rule 67)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 151
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 141

	E2 -> E '-' . E                                     (rule 68)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 150
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 142

	E2 -> E '*' . E                                     (rule 69)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 149
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 143

	E2 -> E '/' . E                                     (rule 70)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 148
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 144

	E2 -> E '%' . E                                     (rule 71)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 147
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 145

	Retstmt -> RETURN RVal ';' .                        (rule 50)

	END            reduce using rule 50


State 146

	LVarList -> LVarList ',' BaseVar .                  (rule 46)

	','            reduce using rule 46
	';'            reduce using rule 46


State 147

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	E2 -> E '%' E .                                     (rule 71)

	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	'%'            reduce using rule 71
	')'            reduce using rule 71
	']'            reduce using rule 71
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'<='           reduce using rule 71
	'>='           reduce using rule 71
	'!='           reduce using rule 71
	'=='           reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71


State 148

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E '/' E .                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)

	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	'%'            reduce using rule 70
	')'            reduce using rule 70
	']'            reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'<='           reduce using rule 70
	'>='           reduce using rule 70
	'!='           reduce using rule 70
	'=='           reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70


State 149

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E '*' E .                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)

	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	'%'            reduce using rule 69
	')'            reduce using rule 69
	']'            reduce using rule 69
	'<'            reduce using rule 69
	'>'            reduce using rule 69
	'<='           reduce using rule 69
	'>='           reduce using rule 69
	'!='           reduce using rule 69
	'=='           reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69


State 150

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E '-' E .                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)

	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 68
	']'            reduce using rule 68
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'<='           reduce using rule 68
	'>='           reduce using rule 68
	'!='           reduce using rule 68
	'=='           reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68


State 151

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E '+' E .                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 67
	']'            reduce using rule 67
	'<'            reduce using rule 67
	'>'            reduce using rule 67
	'<='           reduce using rule 67
	'>='           reduce using rule 67
	'!='           reduce using rule 67
	'=='           reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67


State 152

	E2 -> '(' E2 ')' .                                  (rule 72)

	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	'%'            reduce using rule 72
	')'            reduce using rule 72
	']'            reduce using rule 72
	'<'            reduce using rule 72
	'>'            reduce using rule 72
	'<='           reduce using rule 72
	'>='           reduce using rule 72
	'!='           reduce using rule 72
	'=='           reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72


State 153

	Stmt -> WHILE '(' B ')' . DO Slist ENDWHILE ';'     (rule 63)

	DO             shift, and enter state 178


State 154

	Stmt -> IF '(' B ')' . THEN Slist ENDIF ';'         (rule 61)
	Stmt -> IF '(' B ')' . THEN Slist ELSE Slist ENDIF ';'    (rule 62)

	THEN           shift, and enter state 177


State 155

	B -> E '<' . E                                      (rule 81)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 176
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 156

	B -> E '>' . E                                      (rule 82)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 175
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 157

	B -> E '<=' . E                                     (rule 83)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 174
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 158

	B -> E '>=' . E                                     (rule 84)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 173
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 159

	B -> E '!=' . E                                     (rule 85)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 172
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 160

	B -> E '==' . E                                     (rule 86)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 171
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 161

	Stmt -> WRITE '(' RVal ')' . ';'                    (rule 60)

	';'            shift, and enter state 170


State 162

	Stmt -> READ '(' Variable ')' . ';'                 (rule 58)

	';'            shift, and enter state 169


State 163

	FnCall -> id '(' ArgList ')' .                      (rule 77)

	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	'%'            reduce using rule 77
	')'            reduce using rule 77
	']'            reduce using rule 77
	'<'            reduce using rule 77
	'>'            reduce using rule 77
	'<='           reduce using rule 77
	'>='           reduce using rule 77
	'!='           reduce using rule 77
	'=='           reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77


State 164

	ArgList -> ArgList ',' . RVal                       (rule 78)

	int            shift, and enter state 102
	str            shift, and enter state 103
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104
	'&'            shift, and enter state 105

	RVal           goto state 168
	E2             goto state 97
	E              goto state 98
	FnCall         goto state 99
	Variable       goto state 100
	DotField       goto state 78
	String         goto state 101

State 165

	Variable -> id '[' E ']' .                          (rule 88)
	Variable -> id '[' E ']' . '[' E ']'                (rule 89)

	'+'            reduce using rule 88
	'-'            reduce using rule 88
	'*'            reduce using rule 88
	'/'            reduce using rule 88
	'%'            reduce using rule 88
	')'            reduce using rule 88
	'['            shift, and enter state 167
	']'            reduce using rule 88
	'='            reduce using rule 88
	'<'            reduce using rule 88
	'>'            reduce using rule 88
	'<='           reduce using rule 88
	'>='           reduce using rule 88
	'!='           reduce using rule 88
	'=='           reduce using rule 88
	','            reduce using rule 88
	';'            reduce using rule 88


State 166

	Stmt -> Variable '=' RVal ';' .                     (rule 59)

	id             reduce using rule 59
	'*'            reduce using rule 59
	READ           reduce using rule 59
	WRITE          reduce using rule 59
	IF             reduce using rule 59
	ELSE           reduce using rule 59
	ENDIF          reduce using rule 59
	WHILE          reduce using rule 59
	ENDWHILE       reduce using rule 59
	BREAK          reduce using rule 59
	CONTINUE       reduce using rule 59
	RETURN         reduce using rule 59


State 167

	Variable -> id '[' E ']' '[' . E ']'                (rule 89)

	int            shift, and enter state 102
	id             shift, and enter state 79
	'*'            shift, and enter state 80
	'('            shift, and enter state 104

	E2             goto state 126
	E              goto state 181
	FnCall         goto state 128
	Variable       goto state 129
	DotField       goto state 78

State 168

	ArgList -> ArgList ',' RVal .                       (rule 78)

	')'            reduce using rule 78
	','            reduce using rule 78


State 169

	Stmt -> READ '(' Variable ')' ';' .                 (rule 58)

	id             reduce using rule 58
	'*'            reduce using rule 58
	READ           reduce using rule 58
	WRITE          reduce using rule 58
	IF             reduce using rule 58
	ELSE           reduce using rule 58
	ENDIF          reduce using rule 58
	WHILE          reduce using rule 58
	ENDWHILE       reduce using rule 58
	BREAK          reduce using rule 58
	CONTINUE       reduce using rule 58
	RETURN         reduce using rule 58


State 170

	Stmt -> WRITE '(' RVal ')' ';' .                    (rule 60)

	id             reduce using rule 60
	'*'            reduce using rule 60
	READ           reduce using rule 60
	WRITE          reduce using rule 60
	IF             reduce using rule 60
	ELSE           reduce using rule 60
	ENDIF          reduce using rule 60
	WHILE          reduce using rule 60
	ENDWHILE       reduce using rule 60
	BREAK          reduce using rule 60
	CONTINUE       reduce using rule 60
	RETURN         reduce using rule 60


State 171

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E '==' E .                                     (rule 86)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 86


State 172

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E '!=' E .                                     (rule 85)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 85


State 173

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E '>=' E .                                     (rule 84)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 84


State 174

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E '<=' E .                                     (rule 83)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 83


State 175

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E '>' E .                                      (rule 82)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 82


State 176

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	B -> E '<' E .                                      (rule 81)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	')'            reduce using rule 81


State 177

	Stmt -> IF '(' B ')' THEN . Slist ENDIF ';'         (rule 61)
	Stmt -> IF '(' B ')' THEN . Slist ELSE Slist ENDIF ';'    (rule 62)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86

	Slist          goto state 180
	Stmt           goto state 75
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 178

	Stmt -> WHILE '(' B ')' DO . Slist ENDWHILE ';'     (rule 63)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86

	Slist          goto state 179
	Stmt           goto state 75
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 179

	Slist -> Slist . Stmt                               (rule 56)
	Stmt -> WHILE '(' B ')' DO Slist . ENDWHILE ';'     (rule 63)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	WHILE          shift, and enter state 84
	ENDWHILE       shift, and enter state 185
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86

	Stmt           goto state 120
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 180

	Slist -> Slist . Stmt                               (rule 56)
	Stmt -> IF '(' B ')' THEN Slist . ENDIF ';'         (rule 61)
	Stmt -> IF '(' B ')' THEN Slist . ELSE Slist ENDIF ';'    (rule 62)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	ELSE           shift, and enter state 183
	ENDIF          shift, and enter state 184
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86

	Stmt           goto state 120
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 181

	E2 -> E . '+' E                                     (rule 67)
	E2 -> E . '-' E                                     (rule 68)
	E2 -> E . '*' E                                     (rule 69)
	E2 -> E . '/' E                                     (rule 70)
	E2 -> E . '%' E                                     (rule 71)
	Variable -> id '[' E ']' '[' E . ']'                (rule 89)

	'+'            shift, and enter state 140
	'-'            shift, and enter state 141
	'*'            shift, and enter state 142
	'/'            shift, and enter state 143
	'%'            shift, and enter state 144
	']'            shift, and enter state 182


State 182

	Variable -> id '[' E ']' '[' E ']' .                (rule 89)

	'+'            reduce using rule 89
	'-'            reduce using rule 89
	'*'            reduce using rule 89
	'/'            reduce using rule 89
	'%'            reduce using rule 89
	')'            reduce using rule 89
	']'            reduce using rule 89
	'='            reduce using rule 89
	'<'            reduce using rule 89
	'>'            reduce using rule 89
	'<='           reduce using rule 89
	'>='           reduce using rule 89
	'!='           reduce using rule 89
	'=='           reduce using rule 89
	','            reduce using rule 89
	';'            reduce using rule 89


State 183

	Stmt -> IF '(' B ')' THEN Slist ELSE . Slist ENDIF ';'    (rule 62)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86

	Slist          goto state 188
	Stmt           goto state 75
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 184

	Stmt -> IF '(' B ')' THEN Slist ENDIF . ';'         (rule 61)

	';'            shift, and enter state 187


State 185

	Stmt -> WHILE '(' B ')' DO Slist ENDWHILE . ';'     (rule 63)

	';'            shift, and enter state 186


State 186

	Stmt -> WHILE '(' B ')' DO Slist ENDWHILE ';' .     (rule 63)

	id             reduce using rule 63
	'*'            reduce using rule 63
	READ           reduce using rule 63
	WRITE          reduce using rule 63
	IF             reduce using rule 63
	ELSE           reduce using rule 63
	ENDIF          reduce using rule 63
	WHILE          reduce using rule 63
	ENDWHILE       reduce using rule 63
	BREAK          reduce using rule 63
	CONTINUE       reduce using rule 63
	RETURN         reduce using rule 63


State 187

	Stmt -> IF '(' B ')' THEN Slist ENDIF ';' .         (rule 61)

	id             reduce using rule 61
	'*'            reduce using rule 61
	READ           reduce using rule 61
	WRITE          reduce using rule 61
	IF             reduce using rule 61
	ELSE           reduce using rule 61
	ENDIF          reduce using rule 61
	WHILE          reduce using rule 61
	ENDWHILE       reduce using rule 61
	BREAK          reduce using rule 61
	CONTINUE       reduce using rule 61
	RETURN         reduce using rule 61


State 188

	Slist -> Slist . Stmt                               (rule 56)
	Stmt -> IF '(' B ')' THEN Slist ELSE Slist . ENDIF ';'    (rule 62)

	id             shift, and enter state 79
	'*'            shift, and enter state 80
	READ           shift, and enter state 81
	WRITE          shift, and enter state 82
	IF             shift, and enter state 83
	ENDIF          shift, and enter state 189
	WHILE          shift, and enter state 84
	BREAK          shift, and enter state 85
	CONTINUE       shift, and enter state 86

	Stmt           goto state 120
	FnCall         goto state 76
	Variable       goto state 77
	DotField       goto state 78

State 189

	Stmt -> IF '(' B ')' THEN Slist ELSE Slist ENDIF . ';'    (rule 62)

	';'            shift, and enter state 190


State 190

	Stmt -> IF '(' B ')' THEN Slist ELSE Slist ENDIF ';' .    (rule 62)

	id             reduce using rule 62
	'*'            reduce using rule 62
	READ           reduce using rule 62
	WRITE          reduce using rule 62
	IF             reduce using rule 62
	ELSE           reduce using rule 62
	ENDIF          reduce using rule 62
	WHILE          reduce using rule 62
	ENDWHILE       reduce using rule 62
	BREAK          reduce using rule 62
	CONTINUE       reduce using rule 62
	RETURN         reduce using rule 62


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 97
Number of terminals: 47
Number of non-terminals: 39
Number of states: 191
